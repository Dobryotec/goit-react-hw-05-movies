{"version":3,"file":"static/js/748.08097495.chunk.js","mappings":"yMAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0FAOVE,EAAWF,EAAAA,GAAAA,GAAH,+EAMRG,EAAWH,EAAAA,GAAAA,GAAH,6C,kBCSrB,EAlBkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,SAACF,EAAD,UACGC,EAAOK,KAAI,WAAgBC,GAAW,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MACjB,OACE,SAACV,EAAD,WACE,UAACH,EAAD,CAAYc,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMV,GAAhD,UACGK,EAAQ,EADX,IACeE,MAFFD,EAMlB,KAGN,C,uJCvBD,IAAMK,EAAW,gCACXC,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IAAWG,MAAK,SAAAC,GAAG,OACvEA,EAAIC,MADmE,GAG1E,CAEM,SAASC,EAAkBC,GAChC,OAAOL,MAAM,GAAD,OACPH,EADO,gCACyBC,EADzB,kBAC0CO,EAD1C,+CAEVJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,CAEM,SAASG,EAAkBC,GAChC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,iBAAqBU,EAArB,oBAAwCT,IAAWG,MAAK,SAAAC,GAAG,OACrEA,EAAIC,MADiE,GAGxE,CACM,SAASK,EAAgBD,GAC9B,OAAOP,MAAM,GAAD,OAAIH,EAAJ,iBAAqBU,EAArB,4BAAgDT,IAAWG,MACrE,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAEN,CAEM,SAASM,EAAkBF,GAChC,OAAOP,MAAM,GAAD,OACPH,EADO,iBACUU,EADV,4BACqCT,EADrC,2BAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACX,C,oIC5BYO,EAAQ7B,EAAAA,GAAAA,MAAH,wNAYL8B,EAAS9B,EAAAA,GAAAA,OAAH,2L,GAUKA,EAAAA,GAAAA,GAAH,iJAUGA,EAAAA,GAAAA,GAAH,6C,gBCMrB,EAlCmB,WAAO,IAAD,EACvB,GAAwC+B,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACMC,EAAM,UAAGP,EAAaQ,IAAI,iBAApB,QAAiC,IAU7CC,EAAAA,EAAAA,YAAU,WACHF,IACLhB,EAAAA,EAAAA,IAAkBgB,GACfnB,MAAK,gBAAGsB,EAAH,EAAGA,QAAH,OAAiBJ,EAAiBI,EAAlC,IACLC,OAAM,SAAAC,GAAG,OAAIrC,QAAQsC,MAAMD,EAAlB,GACb,GAAE,CAACL,IAMJ,OACE,kBAAMO,SApBa,SAAAC,GAEnB,GADAA,EAAEC,kBACGb,EACH,OAAOF,EAAgB,CAAC,GAE1BA,EAAgB,CAAEM,OAAQJ,GAC3B,EAcC,WACE,SAACN,EAAD,CAAOoB,KAAK,OAAOzB,MAAOW,EAAOe,SANhB,SAAAH,GACnBX,EAASW,EAAEI,OAAO3B,MACnB,KAKG,SAACM,EAAD,CAAQmB,KAAK,SAAb,qBACA,SAACG,EAAA,EAAD,CAAWhD,OAAQiC,MAGxB,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/services/FetchFilms.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  transition: color 500ms;\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const FilmItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const FilmList = styled.ul`\n  margin-top: 30px;\n`;\n","import {\n  FilmItem,\n  StyledLink,\n  FilmList,\n} from './MovieList.styled'\nimport { useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <FilmList>\n      {movies.map(({ id, title }, index) => {\n        return (\n          <FilmItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              {index + 1}){title}\n            </StyledLink>\n          </FilmItem>\n        );\n      })}\n    </FilmList>\n  );\n};\n\nexport default MovieList;\n","const _apiBase = 'https://api.themoviedb.org/3/';\nconst _apiKey = 'a8e8f1f6f05f8bbeb94fac813dcc486c';\n\nexport function fetchPopularFilms() {\n  return fetch(`${_apiBase}trending/movie/day?api_key=${_apiKey}`).then(res =>\n    res.json()\n  );\n}\n\nexport function fetchSearchMovies(value) {\n  return fetch(\n    `${_apiBase}search/movie?api_key=${_apiKey}&query=${value}&language=en-US&page=1&include_adult=false`\n  ).then(res => res.json());\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetch(`${_apiBase}movie/${movieId}?api_key=${_apiKey}`).then(res =>\n    res.json()\n  );\n}\nexport function fetchMovieCasts(movieId) {\n  return fetch(`${_apiBase}movie/${movieId}/credits?api_key=${_apiKey}`).then(\n    res => res.json()\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetch(\n    `${_apiBase}movie/${movieId}/reviews?api_key=${_apiKey}&language=en-US&page=1`\n  ).then(res => res.json());\n}\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border: 1px solid black;\n  border-radius: 5px;\n  padding-left: 10px;\n  transition: all 500ms;\n  margin-right: 10px;\n  cursor: pointer;\n  &:hover {\n    border: 1px solid orange;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid orange;\n  border-radius: 10px;\n  padding: 2px 15px;\n  transition: background-color 700ms;\n  &:hover {\n    background-color: orange;\n  }\n`;\n\nexport const FilmItem = styled.li`\n  transition: color 700ms;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const FilmList = styled.ul`\n  margin-top: 40px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchSearchMovies } from 'components/services/FetchFilms';\nimport { Input, Button } from 'pages/MoviesPage/MoviesPage.styled';\nimport MovieList from '../../components/MovieList/MovieList';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [query, setQuery] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n  const filmId = searchParams.get('filmId') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      return setSearchParams({});\n    }\n    setSearchParams({ filmId: query });\n  };\n\n  useEffect(() => {\n    if (!filmId) return;\n    fetchSearchMovies(filmId)\n      .then(({ results }) => setSearchResults(results))\n      .catch(err => console.error(err));\n  }, [filmId]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input type=\"text\" value={query} onChange={handleChange} />\n      <Button type=\"submit\">Search</Button>\n      <MovieList movies={searchResults} />\n    </form>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["StyledLink","styled","NavLink","FilmItem","FilmList","movies","location","useLocation","console","log","map","index","id","title","to","state","from","_apiBase","_apiKey","fetchPopularFilms","fetch","then","res","json","fetchSearchMovies","value","fetchMovieDetails","movieId","fetchMovieCasts","fetchMovieReviews","Input","Button","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","searchResults","setSearchResults","filmId","get","useEffect","results","catch","err","error","onSubmit","e","preventDefault","type","onChange","target","MovieList"],"sourceRoot":""}